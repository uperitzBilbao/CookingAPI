// <auto-generated />
using CookingAPI.DataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CookingAPI.Migrations
{
    [DbContext(typeof(CookingModel))]
    partial class CookingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CookingAPI.Models.Ingrediente", b =>
                {
                    b.Property<int>("IdIngrediente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIngrediente"));

                    b.Property<int>("IdTipoIngrediente")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdIngrediente");

                    b.ToTable("Ingredientes");

                    b.HasData(
                        new
                        {
                            IdIngrediente = 1,
                            IdTipoIngrediente = 1,
                            Nombre = "Pasta"
                        },
                        new
                        {
                            IdIngrediente = 2,
                            IdTipoIngrediente = 2,
                            Nombre = "Pollo"
                        },
                        new
                        {
                            IdIngrediente = 3,
                            IdTipoIngrediente = 5,
                            Nombre = "Sal"
                        },
                        new
                        {
                            IdIngrediente = 4,
                            IdTipoIngrediente = 1,
                            Nombre = "Lechuga"
                        },
                        new
                        {
                            IdIngrediente = 5,
                            IdTipoIngrediente = 1,
                            Nombre = "Tomate"
                        },
                        new
                        {
                            IdIngrediente = 6,
                            IdTipoIngrediente = 1,
                            Nombre = "Pepino"
                        },
                        new
                        {
                            IdIngrediente = 7,
                            IdTipoIngrediente = 1,
                            Nombre = "Zanahoria"
                        },
                        new
                        {
                            IdIngrediente = 8,
                            IdTipoIngrediente = 5,
                            Nombre = "Aceite de oliva"
                        });
                });

            modelBuilder.Entity("CookingAPI.Models.IngredienteAlergeno", b =>
                {
                    b.Property<int>("IdIngrediente")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoAlergeno")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("IdIngrediente", "IdTipoAlergeno");

                    b.HasIndex("IdTipoAlergeno");

                    b.ToTable("IngredienteAlergeno");

                    b.HasData(
                        new
                        {
                            IdIngrediente = 1,
                            IdTipoAlergeno = 1,
                            Id = 0
                        });
                });

            modelBuilder.Entity("CookingAPI.Models.Receta", b =>
                {
                    b.Property<int>("IdReceta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReceta"));

                    b.Property<string>("Elaboracion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTipoDieta")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoElaboracion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Presentacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Raciones")
                        .HasColumnType("int");

                    b.Property<int>("TiempoMinutos")
                        .HasColumnType("int");

                    b.HasKey("IdReceta");

                    b.ToTable("Recetas");

                    b.HasData(
                        new
                        {
                            IdReceta = 1,
                            Elaboracion = "Cocina la pasta y añade pollo.",
                            IdTipoDieta = 7,
                            IdTipoElaboracion = 3,
                            Nombre = "Pasta con Pollo",
                            Presentacion = "Servir caliente.",
                            Raciones = 4,
                            TiempoMinutos = 30
                        },
                        new
                        {
                            IdReceta = 2,
                            Elaboracion = "Mezcla vegetales frescos.",
                            IdTipoDieta = 1,
                            IdTipoElaboracion = 1,
                            Nombre = "Ensalada Vegana",
                            Presentacion = "Servir fría.",
                            Raciones = 2,
                            TiempoMinutos = 15
                        });
                });

            modelBuilder.Entity("RecetaIngrediente", b =>
                {
                    b.Property<int>("IdReceta")
                        .HasColumnType("int");

                    b.Property<int>("IdIngrediente")
                        .HasColumnType("int");

                    b.Property<float>("Cantidad")
                        .HasColumnType("real");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("IdReceta", "IdIngrediente");

                    b.HasIndex("IdIngrediente");

                    b.ToTable("RecetaIngredientes");

                    b.HasData(
                        new
                        {
                            IdReceta = 1,
                            IdIngrediente = 1,
                            Cantidad = 250f,
                            Id = 0
                        },
                        new
                        {
                            IdReceta = 1,
                            IdIngrediente = 2,
                            Cantidad = 300f,
                            Id = 0
                        },
                        new
                        {
                            IdReceta = 1,
                            IdIngrediente = 3,
                            Cantidad = 1f,
                            Id = 0
                        },
                        new
                        {
                            IdReceta = 2,
                            IdIngrediente = 4,
                            Cantidad = 100f,
                            Id = 0
                        },
                        new
                        {
                            IdReceta = 2,
                            IdIngrediente = 5,
                            Cantidad = 150f,
                            Id = 0
                        },
                        new
                        {
                            IdReceta = 2,
                            IdIngrediente = 6,
                            Cantidad = 100f,
                            Id = 0
                        },
                        new
                        {
                            IdReceta = 2,
                            IdIngrediente = 7,
                            Cantidad = 50f,
                            Id = 0
                        },
                        new
                        {
                            IdReceta = 2,
                            IdIngrediente = 8,
                            Cantidad = 2f,
                            Id = 0
                        });
                });

            modelBuilder.Entity("TipoAlergeno", b =>
                {
                    b.Property<int>("IdTipoAlergeno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoAlergeno"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoAlergeno");

                    b.ToTable("TiposAlergeno");

                    b.HasData(
                        new
                        {
                            IdTipoAlergeno = 1,
                            Nombre = "Gluten"
                        },
                        new
                        {
                            IdTipoAlergeno = 2,
                            Nombre = "Crustáceos"
                        },
                        new
                        {
                            IdTipoAlergeno = 3,
                            Nombre = "Huevos"
                        },
                        new
                        {
                            IdTipoAlergeno = 4,
                            Nombre = "Pescado"
                        },
                        new
                        {
                            IdTipoAlergeno = 5,
                            Nombre = "Cacahuetes"
                        },
                        new
                        {
                            IdTipoAlergeno = 6,
                            Nombre = "Soja"
                        },
                        new
                        {
                            IdTipoAlergeno = 7,
                            Nombre = "Leche"
                        },
                        new
                        {
                            IdTipoAlergeno = 8,
                            Nombre = "Frutos con cáscara"
                        },
                        new
                        {
                            IdTipoAlergeno = 9,
                            Nombre = "Apio"
                        },
                        new
                        {
                            IdTipoAlergeno = 10,
                            Nombre = "Mostaza"
                        },
                        new
                        {
                            IdTipoAlergeno = 11,
                            Nombre = "Sésamo"
                        },
                        new
                        {
                            IdTipoAlergeno = 12,
                            Nombre = "Sulfitos"
                        },
                        new
                        {
                            IdTipoAlergeno = 13,
                            Nombre = "Altramuces"
                        },
                        new
                        {
                            IdTipoAlergeno = 14,
                            Nombre = "Moluscos"
                        });
                });

            modelBuilder.Entity("TipoDieta", b =>
                {
                    b.Property<int>("IdTipoDieta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoDieta"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoDieta");

                    b.ToTable("TiposDieta");

                    b.HasData(
                        new
                        {
                            IdTipoDieta = 1,
                            Nombre = "Vegana"
                        },
                        new
                        {
                            IdTipoDieta = 2,
                            Nombre = "Pescetariana"
                        },
                        new
                        {
                            IdTipoDieta = 3,
                            Nombre = "Lactovegetariana"
                        },
                        new
                        {
                            IdTipoDieta = 4,
                            Nombre = "Lactoovovegetariana"
                        },
                        new
                        {
                            IdTipoDieta = 5,
                            Nombre = "Ovovegetariana"
                        },
                        new
                        {
                            IdTipoDieta = 6,
                            Nombre = "Vegetariana"
                        },
                        new
                        {
                            IdTipoDieta = 7,
                            Nombre = "Omnívora"
                        });
                });

            modelBuilder.Entity("TipoElaboracion", b =>
                {
                    b.Property<int>("IdTipoElaboracion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoElaboracion"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoElaboracion");

                    b.ToTable("TiposElaboracion");

                    b.HasData(
                        new
                        {
                            IdTipoElaboracion = 1,
                            Nombre = "Entrante"
                        },
                        new
                        {
                            IdTipoElaboracion = 2,
                            Nombre = "Primer Plato"
                        },
                        new
                        {
                            IdTipoElaboracion = 3,
                            Nombre = "Segundo Plato"
                        },
                        new
                        {
                            IdTipoElaboracion = 4,
                            Nombre = "Postre"
                        },
                        new
                        {
                            IdTipoElaboracion = 5,
                            Nombre = "Aperitivo"
                        },
                        new
                        {
                            IdTipoElaboracion = 6,
                            Nombre = "Bebida"
                        },
                        new
                        {
                            IdTipoElaboracion = 7,
                            Nombre = "Salsa"
                        },
                        new
                        {
                            IdTipoElaboracion = 8,
                            Nombre = "Guarnición"
                        });
                });

            modelBuilder.Entity("TipoIngrediente", b =>
                {
                    b.Property<int>("IdTipoIngrediente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoIngrediente"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoIngrediente");

                    b.ToTable("TiposIngrediente");

                    b.HasData(
                        new
                        {
                            IdTipoIngrediente = 1,
                            Nombre = "Vegetal"
                        },
                        new
                        {
                            IdTipoIngrediente = 2,
                            Nombre = "Carne"
                        },
                        new
                        {
                            IdTipoIngrediente = 3,
                            Nombre = "Pescado"
                        },
                        new
                        {
                            IdTipoIngrediente = 4,
                            Nombre = "Origen animal"
                        },
                        new
                        {
                            IdTipoIngrediente = 5,
                            Nombre = "Condimento"
                        });
                });

            modelBuilder.Entity("CookingAPI.Models.IngredienteAlergeno", b =>
                {
                    b.HasOne("CookingAPI.Models.Ingrediente", "Ingrediente")
                        .WithMany("IngredienteAlergenos")
                        .HasForeignKey("IdIngrediente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TipoAlergeno", "TipoAlergeno")
                        .WithMany()
                        .HasForeignKey("IdTipoAlergeno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediente");

                    b.Navigation("TipoAlergeno");
                });

            modelBuilder.Entity("RecetaIngrediente", b =>
                {
                    b.HasOne("CookingAPI.Models.Ingrediente", "Ingrediente")
                        .WithMany()
                        .HasForeignKey("IdIngrediente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CookingAPI.Models.Receta", "Receta")
                        .WithMany("RecetaIngredientes")
                        .HasForeignKey("IdReceta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediente");

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("CookingAPI.Models.Ingrediente", b =>
                {
                    b.Navigation("IngredienteAlergenos");
                });

            modelBuilder.Entity("CookingAPI.Models.Receta", b =>
                {
                    b.Navigation("RecetaIngredientes");
                });
#pragma warning restore 612, 618
        }
    }
}
